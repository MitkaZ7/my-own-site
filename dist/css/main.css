.layer {
  height: 100%;
  width: 100%;
  position: absolute;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  background-origin: border-box;
  will-change: transform;
  z-index: 2;
}

.layers__base {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  z-index: 0;
}

.layers__middle {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
}

.layers__front {
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
}

.stack-section {
  height: 100vh;
  padding-top: 50px;
}
.stack-section__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin: 0 50px;
}
.stack-section__technology-list {
  list-style: none;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
  letter-spacing: calc((1.3vw + 1vh) / 8);
  font-size: calc((1.3vw + 1vh) * 0.6);
}
.stack-section__logo {
  margin: 0 50px;
  max-width: 300px;
  max-height: 300px;
}

.stack-section__header {
  text-transform: uppercase;
  margin: 0 0 50px 50px;
  z-index: 999;
}
.stack-section__header span {
  color: #0FD944;
}

.technology-list__category-list {
  list-style: none;
  color: #0FD944;
}
.technology-list__category-list > li {
  color: #fafafa;
}

.projects-section {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
}
.projects-section__header {
  padding: 50px;
  text-transform: uppercase;
}
.projects-section__title {
  color: hsl(0, 100%, 50%);
}
.project-card {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  font-size: calc((1.3vw + 1vh) * 0.7);
  -ms-flex-pack: distribute;
      justify-content: space-around;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  height: 100vh;
}
.project-card__project-image-wrapper {
  width: 500px;
}
.project-card__project-image {
  width: 100%;
  height: 100%;
  border: 3px solid red;
  -webkit-box-shadow: 0.3em 0.3em 2em hsl(0, 100%, 50%), 0 -0.3em 2em hsl(0, 100%, 50%);
          box-shadow: 0.3em 0.3em 2em hsl(0, 100%, 50%), 0 -0.3em 2em hsl(0, 100%, 50%);
  border-radius: 15px;
}
.project-card__project-title {
  color: hsl(0, 100%, 50%);
  font-weight: 700;
}
.project-card__project-features {
  margin-top: 20px;
  color: #fafafa;
  list-style: none;
  line-height: 1.75rem;
  font-size: calc((1.3vw + 1vh) * 0.6);
}
.project-card__project-features > li::before {
  content: "-";
  color: hsl(0, 100%, 50%);
  display: inline-block;
  width: 1em;
  margin-left: -1em;
}

.header {
  height: 100vh;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  font-weight: 100;
}
.header__titles {
  z-index: 999;
  -webkit-transform: translate3d(0, calc(var(--scrollTop) / 2), 0);
          transform: translate3d(0, calc(var(--scrollTop) / 2), 0);
  text-transform: uppercase;
  color: #fafafa;
  will-change: transform;
  opacity: 1;
  max-width: 900px;
  margin-left: 50px;
  text-align: left;
}
@media screen and (max-width: 768px) {
  .header__titles {
    max-width: 225px;
  }
}
@media screen and (max-width: 390px) {
  .header__titles {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    margin-left: 0;
  }
}
.header__title {
  letter-spacing: calc((1.3vw + 1vh) / 8);
  font-size: calc((1.3vw + 1vh) * 3.6);
  font-weight: 200;
}
.header__title-accent {
  color: hsl(0, 100%, 50%);
  letter-spacing: calc((1.3vw + 1vh) / 6);
  font-weight: 100;
  font-family: neon, serif;
  text-shadow: 0 0 0.15em hsl(0, 100%, 52%), 0 0 0.3em hsl(0, 100%, 50%), 0 0 0.45em hsl(0, 70%, 40%), 0 0 0.6em hsl(0, 70%, 40%), 0 0 0.75em hsl(0, 70%, 30%), 0 0 0.9em hsl(0, 70%, 30%);
  font-size: larger;
}
.header__subtitle {
  letter-spacing: calc((1.3vw + 1vh) / 8);
  font-size: calc((1.3vw + 1vh) * 1.5);
  width: 300px;
}
.header__hashtags {
  margin-top: 10px;
  font-size: calc((1.3vw + 1vh) * 0.4);
  color: rgba(255, 255, 255, 0.4);
}
@media screen and (max-width: 768px) {
  .header__hashtags {
    font-size: calc((1.3vw + 1vh) * 1.4);
  }
}
.header__svg-container {
  width: 60vw;
  height: 90vh;
}
@media screen and (max-width: 768px) {
  .header__svg-container {
    max-height: 50vh;
    max-width: 50vw;
    -webkit-box-ordinal-group: 0;
        -ms-flex-order: -1;
            order: -1;
    -ms-flex-item-align: center;
        align-self: center;
  }
}
@media screen and (max-width: 390px) {
  .header__svg-container {
    max-height: 50%;
    dispay: none;
  }
}
@media screen and (max-width: 768px) {
  .header {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
  }
}
@media screen and (max-width: 390px) {
  .header {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }
}

.hand__neon {
  -webkit-filter: drop-shadow(10 10 1.5em hsl(0, 0%, 100%));
          filter: drop-shadow(10 10 1.5em hsl(0, 0%, 100%));
}

.menu {
  z-index: 999;
  font-size: calc((1.3vw + 1vh) * 0.6);
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  position: fixed;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  bottom: 50px;
  right: 50px;
  color: #fafafa;
}
.menu__list {
  text-transform: uppercase;
  font-weight: 200;
  list-style: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: end;
}
.menu__item {
  margin-right: 15px;
}
.menu__item a {
  text-decoration: none;
  color: rgba(255, 255, 255, 0.4);
}
.menu__item a span {
  position: relative;
}
.menu__item a span:before {
  width: 0;
  color: hsl(0, 100%, 50%);
  overflow: hidden;
  position: absolute;
  content: attr(data-text);
  -webkit-transition: all 0.4s cubic-bezier(0.84, 0, 0.08, 0.99);
  -o-transition: all 0.4s cubic-bezier(0.84, 0, 0.08, 0.99);
  transition: all 0.4s cubic-bezier(0.84, 0, 0.08, 0.99);
}
.menu__item span:hover:before {
  width: 100%;
}

.footer {
  background-color: #252423;
  height: 100vh;
  margin-bottom: 50px;
}
.footer__copyright {
  text-align: center;
}

@font-face {
  font-family: "IBM Plex Mono";
  src: url(../fonts/IBM-Plex-Mono/ibm-plex-mono-700.woff2);
  font-weight: 700;
}
@font-face {
  font-family: raleway_f;
  src: url(../fonts/raleway-regular.woff2);
  font-weight: 700;
}
@font-face {
  font-family: raleway_f;
  src: url(../fonts/raleway-v29-cyrillic_latin-100.woff2);
  font-weight: 100;
}
@font-face {
  font-family: raleway_f;
  src: url(../fonts/raleway-v29-cyrillic_latin-200.woff2);
  font-weight: 200;
}
@font-face {
  font-family: raleway_f;
  src: url(../fonts/raleway-v28-latin-900.woff2);
  font-weight: 900;
}
@font-face {
  font-family: tilt_neon;
  src: url(../fonts/tilt-neon-v10-latin-regular.woff2);
}
@font-face {
  font-family: neon;
  src: url(../fonts/Neoneon-2l.woff2);
}
@font-face {
  font-family: ru_neon;
  src: url(../fonts/neon_ru.woff2);
}
* {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body {
  font-family: raleway_f, serif;
  background-color: #252423;
  color: #fafafa;
  font-weight: 700;
}

a:visited {
  color: #fafafa;
}

.section {
  position: relative;
  width: 100%;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: -webkit-max-content 1fr;
  grid-template-rows: max-content 1fr;
  gap: 0px 0px;
  grid-template-areas: "." ".";
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */